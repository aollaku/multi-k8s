language: generic

services:
  - docker

env:
  global:
    - IMAGE_TAG=latest
    - DOCKER_REPO=aollaku
    - GCLOUD_PROJECT=multi-k8s-462503
    - GCP_ZONE=us-central1-a
    - GKE_CLUSTER_NAME=multi-cluster
    - USE_GKE_GCLOUD_AUTH_PLUGIN=True

before_install:
  # Install kubectl
  - curl -LO https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl
  - chmod +x kubectl
  - sudo mv kubectl /usr/local/bin/

  # Install Google Cloud SDK (non-interactive)
  - curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-443.0.0-linux-x86_64.tar.gz
  - tar -xzf google-cloud-sdk-443.0.0-linux-x86_64.tar.gz
  - ./google-cloud-sdk/install.sh --quiet
  - source ./google-cloud-sdk/path.bash.inc

  # âœ… Install GKE auth plugin
  - gcloud components install gke-gcloud-auth-plugin --quiet

  # Decrypt the service account JSON file using OpenSSL
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out ${HOME}/gcloud-key.json -d

  # Authenticate with GCP
  - gcloud auth activate-service-account --key-file=${HOME}/gcloud-key.json
  - gcloud config set project $GCLOUD_PROJECT
  - gcloud config set compute/zone $GCP_ZONE
  - gcloud container clusters get-credentials $GKE_CLUSTER_NAME

script:
  # Build Docker images
  - docker build -t $DOCKER_REPO/multi-client:$IMAGE_TAG ./client
  - docker build -t $DOCKER_REPO/multi-server:$IMAGE_TAG ./server
  - docker build -t $DOCKER_REPO/multi-worker:$IMAGE_TAG ./worker

  # Push Docker images to Docker Hub
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push $DOCKER_REPO/multi-client:$IMAGE_TAG
  - docker push $DOCKER_REPO/multi-server:$IMAGE_TAG
  - docker push $DOCKER_REPO/multi-worker:$IMAGE_TAG

  # Deploy to Kubernetes
  - kubectl apply -f ./k8s
